
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.QuestoesScalarFieldEnum = {
  id_questoes: 'id_questoes',
  texto: 'texto',
  alternativas: 'alternativas',
  gabarito: 'gabarito',
  disciplina: 'disciplina'
};

exports.Prisma.Respostas_simuladoScalarFieldEnum = {
  id_resposta: 'id_resposta',
  id_simulado_feito: 'id_simulado_feito',
  id_questao: 'id_questao',
  acertou: 'acertou'
};

exports.Prisma.Resultados_por_disciplinaScalarFieldEnum = {
  id_resultado_disciplina: 'id_resultado_disciplina',
  id_simulado_feito: 'id_simulado_feito',
  disciplina: 'disciplina',
  acertos_disciplina: 'acertos_disciplina',
  questoes_feitas_disciplina: 'questoes_feitas_disciplina'
};

exports.Prisma.Simulados_feitosScalarFieldEnum = {
  id_simulados_feitos: 'id_simulados_feitos',
  id_usuario: 'id_usuario',
  data_simulado: 'data_simulado',
  acertos_totais: 'acertos_totais',
  questoes_feitas_totais: 'questoes_feitas_totais',
  tempo_gasto: 'tempo_gasto'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.questoesOrderByRelevanceFieldEnum = {
  texto: 'texto',
  alternativas: 'alternativas',
  gabarito: 'gabarito',
  disciplina: 'disciplina'
};

exports.Prisma.resultados_por_disciplinaOrderByRelevanceFieldEnum = {
  disciplina: 'disciplina'
};

exports.Prisma.simulados_feitosOrderByRelevanceFieldEnum = {
  id_usuario: 'id_usuario'
};


exports.Prisma.ModelName = {
  questoes: 'questoes',
  respostas_simulado: 'respostas_simulado',
  resultados_por_disciplina: 'resultados_por_disciplina',
  simulados_feitos: 'simulados_feitos'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/phost/Documentos/projeto-integrador/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/phost/Documentos/projeto-integrador/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel questoes {\n  id_questoes        Int                  @id @default(autoincrement())\n  texto              String               @db.LongText\n  alternativas       String               @db.LongText\n  gabarito           String               @db.LongText\n  disciplina         String?              @db.VarChar(255)\n  respostas_simulado respostas_simulado[]\n}\n\nmodel respostas_simulado {\n  id_resposta       Int              @id @default(autoincrement())\n  id_simulado_feito Int\n  id_questao        Int\n  acertou           Boolean\n  questoes          questoes         @relation(fields: [id_questao], references: [id_questoes], onDelete: Cascade, map: \"fk_questao\")\n  simulados_feitos  simulados_feitos @relation(fields: [id_simulado_feito], references: [id_simulados_feitos], onDelete: Cascade, map: \"fk_simulado_feito\")\n\n  @@index([id_questao], map: \"id_questao\")\n  @@index([id_simulado_feito], map: \"id_simulado_feito\")\n}\n\nmodel resultados_por_disciplina {\n  id_resultado_disciplina    Int              @id @default(autoincrement())\n  id_simulado_feito          Int\n  disciplina                 String           @db.VarChar(50)\n  acertos_disciplina         Int\n  questoes_feitas_disciplina Int\n  simulados_feitos           simulados_feitos @relation(fields: [id_simulado_feito], references: [id_simulados_feitos], onDelete: Cascade, map: \"fk_simulado\")\n\n  @@index([id_simulado_feito], map: \"fk_simulado\")\n}\n\nmodel simulados_feitos {\n  id_simulados_feitos       Int                         @id @default(autoincrement())\n  id_usuario                String                      @db.Char(36)\n  data_simulado             DateTime                    @db.Date\n  acertos_totais            Int\n  questoes_feitas_totais    Int\n  tempo_gasto               DateTime                    @db.Time(0)\n  respostas_simulado        respostas_simulado[]\n  resultados_por_disciplina resultados_por_disciplina[]\n\n  @@index([id_usuario], map: \"fk_usuario_simulados\")\n}\n\n/// Mantemos o modelo usuarios apenas como referência, sem PK para não quebrar Prisma\nmodel usuarios {\n  uuid_usuario String @db.Char(36)\n  nome         String @db.VarChar(10)\n  sobrenome    String @db.VarChar(10)\n  idade        Int\n  email        String @db.VarChar(25)\n  sexo         String @db.VarChar(10)\n\n  @@ignore\n}\n",
  "inlineSchemaHash": "b95c52fd8bdd09b4f11f841b196f704013266ede6963aa25e9f835b15f1cd3be",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"questoes\":{\"fields\":[{\"name\":\"id_questoes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"texto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"alternativas\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gabarito\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"disciplina\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"respostas_simulado\",\"kind\":\"object\",\"type\":\"respostas_simulado\",\"relationName\":\"questoesTorespostas_simulado\"}],\"dbName\":null},\"respostas_simulado\":{\"fields\":[{\"name\":\"id_resposta\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"id_simulado_feito\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"id_questao\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"acertou\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"questoes\",\"kind\":\"object\",\"type\":\"questoes\",\"relationName\":\"questoesTorespostas_simulado\"},{\"name\":\"simulados_feitos\",\"kind\":\"object\",\"type\":\"simulados_feitos\",\"relationName\":\"respostas_simuladoTosimulados_feitos\"}],\"dbName\":null},\"resultados_por_disciplina\":{\"fields\":[{\"name\":\"id_resultado_disciplina\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"id_simulado_feito\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"disciplina\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"acertos_disciplina\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"questoes_feitas_disciplina\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"simulados_feitos\",\"kind\":\"object\",\"type\":\"simulados_feitos\",\"relationName\":\"resultados_por_disciplinaTosimulados_feitos\"}],\"dbName\":null},\"simulados_feitos\":{\"fields\":[{\"name\":\"id_simulados_feitos\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"id_usuario\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data_simulado\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"acertos_totais\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"questoes_feitas_totais\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tempo_gasto\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"respostas_simulado\",\"kind\":\"object\",\"type\":\"respostas_simulado\",\"relationName\":\"respostas_simuladoTosimulados_feitos\"},{\"name\":\"resultados_por_disciplina\",\"kind\":\"object\",\"type\":\"resultados_por_disciplina\",\"relationName\":\"resultados_por_disciplinaTosimulados_feitos\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

